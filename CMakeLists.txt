cmake_minimum_required(VERSION 3.2)

project(libqwt)

set(LIBQWT_VERSION_MAJOR 6)
set(LIBQWT_VERSION_MINOR 1)
set(LIBQWT_VERSION_PATCH 2)

set(LIBQWT_VERSION ${LIBQWT_VERSION_MAJOR}.${LIBQWT_VERSION_MINOR}.${LIBQWT_VERSION_PATCH})
set(CMAKE_AUTOMOC ON)
set(CMAKE_INCLUDE_CURRENT_DIR ON)

set(QT_INSTALL_DIR "" CACHE PATH "Optional directory to custom Qt installation")
option(LIBQWT_USE_QT5 "Build libqwt against Qt5, instead of Qt4" ON)
option(LIBQWT_ENABLE_PLOT "Build plot support" ON)
option(LIBQWT_ENABLE_WIDGETS "Build widgets support" ON)
option(LIBQWT_ENABLE_MATHML "Build MathML support" OFF)
option(LIBQWT_ENABLE_OPENGL "Build OpenGL support" ON)
option(LIBQWT_ENABLE_SVG "Build SVG support" ON)
option(LIBQWT_ENABLE_EXAMPLES "Build libqwt examples" OFF)
option(LIBQWT_ENABLE_PLAYGROUND "Build playground" OFF)
option(LIBQWT_ENABLE_DESIGNER "Enable designer support" OFF)

include_directories(src)

if(QT_INSTALL_DIR)
	set(CMAKE_PREFIX_PATH ${CMAKE_PREFIX_PATH} ${QT_INSTALL_DIR})
endif()

if(LIBQWT_USE_QT5)
	# clear all possible cache variables in case QT_INSTALL_DIR is changed
	unset(Qt5Core_DIR CACHE)
	unset(Qt5Widgets_DIR CACHE)
	unset(Qt5Gui_DIR CACHE)
	unset(Qt5Svg_DIR CACHE)
	unset(Qt5PrintSupport_DIR CACHE)
	unset(Qt5Concurrent_DIR CACHE)
	unset(Qt5OpenGL_DIR CACHE)
	unset(Qt5Xml_DIR CACHE)

	find_package(Qt5Core REQUIRED)
	list(APPEND components Qt5::Core)

	if(LIBQWT_ENABLE_WIDGETS)
		find_package(Qt5Widgets REQUIRED)
		list(APPEND QT_LIBS Qt5::Widgets)
	endif()

	if(LIBQWT_ENABLE_SVG)
		find_package(Qt5Svg QUIET)
		if(Qt5Svg_FOUND)
			list(APPEND QT_LIBS Qt5::Svg)
		else()
			message(STATUS "Qt5 Svg component is not found. Disabling")
			set(LIBQWT_ENABLE_SVG 0)
		endif()
	endif()

	find_package(Qt5PrintSupport REQUIRED)
	list(APPEND QT_LIBS Qt5::PrintSupport)
	find_package(Qt5Concurrent REQUIRED)
	list(APPEND QT_LIBS Qt5::Concurrent)

	if(LIBQWT_ENABLE_OPENGL)
		find_package(Qt5OpenGL REQUIRED)
		list(APPEND QT_LIBS Qt5::OpenGL)
	endif()

	if(LIBQWT_ENABLE_MATHML)
		find_package(Qt5Xml QUIET)
		if(Qt5Xml_FOUND)
			list(APPEND QT_LIBS Qt5::Xml)
		else()
			message(STATUS "Qt5 XML component is not found. Disabling MathML")
			set(LIBQWT_ENABLE_MATHML 0)
		endif()
	endif()

else()
	find_package(Qt4 REQUIRED COMPONENTS QTCORE QTGUI)
	message(FATAL_ERROR "qt4 support incomplete")
endif()

if(NOT LIBQWT_ENABLE_PLOT)
	add_definitions(-DNO_QWT_PLOT)
endif()
if(NOT LIBQWT_ENABLE_WIDGETS)
	add_definitions(-DNO_QWT_WIDGETS)
endif()
if(NOT LIBQWT_ENABLE_SVG)
		add_definitions(-DQWT_NO_SVG)
endif()
if(NOT LIBQWT_ENABLE_OPENGL)
	add_definitions(-DQWT_NO_OPENGL)
endif()
if(BUILD_SHARED_LIBS AND WIN32)
	add_definitions(-DQT_DLL -DQWT_DLL)
endif()

add_subdirectory(src)
add_subdirectory(textengines)
if(LIBQWT_ENABLE_EXAMPLES)
	add_subdirectory(examples)
endif()
if(LIBQWT_ENABLE_PLAYGROUND)
	add_subdirectory(playground)
endif()
if(LIBQWT_ENABLE_DESIGNER)
	add_subdirectory(designer)
endif()